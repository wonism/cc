{"pageContext":{"id":"604779","parent":"__SOURCE__","slug":"5-ways-quickly-fail-new-engineering-manager","internal":{"contentDigest":"190b00ee38c8279e657e1bab56447aa0","type":"ContentCoPost","owner":"default-site-plugin"},"children":[],"title":"5 ways to quickly fail as a new engineering manager","preview":{"source":"https://cdn.techinasia.com/wp-content/uploads/2018/07/business-code-coding-943096.jpg","attachment_meta":{"width":2000,"height":1333,"sizes":{"thumbnail":{"width":100,"height":100,"url":"https://cdn.techinasia.com/wp-content/uploads/2018/07/business-code-coding-943096-100x100.jpg"},"medium":{"width":350,"height":233,"url":"https://cdn.techinasia.com/wp-content/uploads/2018/07/business-code-coding-943096-350x233.jpg"},"large":{"width":750,"height":500,"url":"https://cdn.techinasia.com/wp-content/uploads/2018/07/business-code-coding-943096-750x500.jpg"}}}},"createdAt":"2018-12-06T09:34:41","content":"<p>If you’re an engineering manager, you have likely followed a path similar to mine and many others. You’ve been a software engineer for many years. You’ve earned a senior title and probably became a tech lead. You may have been fighting the promotion to be a manager for some time because you didn’t want to do less coding and lose your skills.</p>\n<p>You might have been also afraid that you wouldn’t do as well in the new role. But finally, somehow, you were convinced to take the chance to shift from senior engineer to junior manager. How will you succeed?</p>\n<p>I’m not here to pretend that I have the secret to success. But I do know a few ways that can guarantee you’ll fail.</p>\n<h2><b>1. Continuing to code</b></h2>\n<p>Your company may expect you to be a manager and an individual contributor at the same time. In my experience, though, that usually fails.</p>\n<p>You won’t be able to consistently give the attention that either role requires, so you’ll fail at both. But if you’re lucky, the company you work for is like mine, where I practically signed an oath saying I wouldn’t code.</p>\n<p>Even if some coding is expected of you, it certainly is no longer your main purpose in the company. What I’m really talking about is when you fall back into coding because you aren’t sure what the heck to do in your new role. You return to what you know because that’s where you’re comfortable.</p>\n<p>This might provide short-term benefit to some projects and make you feel good, but I can guarantee that you won’t achieve your primary objectives. You’ll hurt the long-term output of your team, and you’re also not growing in your new job.</p>\n<p>I don’t think any of us want to simply give up on our valuable and hard-earned technical experience. So read this<a href=\"https://medium.com/coursera-engineering/should-engineering-managers-write-code-wrong-question-ec5fc54d3903\" target=\"_blank\" rel=\"nofollow noopener\"> article</a> for some good options if you want to keep your coding chops.</p>\n<h2><b>2. Focusing only on the work, not the people</b></h2>\n<p>As a manager, you have two important duties: to grow the team and to deliver value to the business. I’d argue that you should prioritize them in that order.</p>\n<p>The typical idea of delivering value is completing projects, shipping features, fixing bugs, etc. This often results in you acting as a project manager or taskmaster, focusing on assigning tickets, tracking metrics, asking for status updates, leading design discussions, and so on. In short, you’re focused on the <i>work</i> of the team. You can check things off the list each day and feel like you’re getting things done.</p>\n<p>But this is the easier half of your role. The other half is harder – it involves helping individuals do their jobs well, both in terms of their technical skills and productivity, as well as listening, coaching, and having one-on-one meetings with your team members. If you ignore this part of your job, you’re leaving a lot of value on the factory floor.</p>\n<p>The effectiveness of the team, along with the ultimate value it produces, starts with the members themselves, not their work.</p>\n<h2><b>3. Measuring your value by your output</b></h2>\n<p>Back when you were an individual contributor, it was easy to quantify your output or value. You tell yourself: “I finished two stories today,” “I figured out that crazy bug,” or “I’ve got all the tests passing.” These were tangible units of work, easily tied to the team’s deliverables. And those commits have your name on them.</p>\n<p>But now, much of your impact is seen in second-order effects. It’s harder to draw the correlation of your work to that of the team’s. Adding to this confusion is the fact that your work is no longer neatly defined by well-prescribed tasks. You might not even be really sure about what work you do.</p>\n<p>As a new manager, you tend to grasp at the few concrete tasks you have and use those to get a feeling of accomplishment. In truth, your work is reflected in the work of the team. Having them accomplish their goals <i>is</i> your goal. Your value is ultimately measured by their success.</p>\n<h2><b>4. Leaving the team out of commitments</b></h2>\n<p>Because you’re new, you might feel compelled to impress the boss, writing checks your team can’t cash. Pretty soon, the team’s had enough, and people start to check out, move to other teams, or leave the company altogether.</p>\n<p>Don’t be the hero. Don’t immediately answer yes to every request from your higher-ups, customers, or business partners. Buy a bit of time and get your team involved in making the commitment.</p>\n<p>As much as possible, you want to lay out the bigger picture for the team and let them connect the dots. Why is this important to the company? How will it affect the customers? What are we actually being asked to address? The last bit is the most important because you need to engage the team in finding the solution.</p>\n<p>There will be times when you have no choice but to receive and deliver marching orders. But when the team is involved in making the commitment and has skin in the game, everything gets better.</p>\n<h2><b>5. Avoiding hard conversations</b></h2>\n<p>If you’ve managed to avoid most of these failures, I have a personal challenge for you. Overcoming this is what separates team leaders from people managers, and learners from leaders.</p>\n<p>As an engineer, you likely had a few heated conversations with others about a project, design, technology choices, coding techniques, and such. But dealing with the people – and that covers personal conflicts and complaints – are usually handled by the boss. Guess what? You’re the boss now.</p>\n<p>This is the best opportunity to make a difference in your organization and grow people and move them (including yourself) forward. But how do you stop sidestepping hard conversations and meet them head on instead? Like many other skills, the only way to learn is to do it for real.</p>\n<p>There are ways to be prepared and strategies to improve your chances of a good outcome. The internet is filled with good advice, but you may start with the book <a href=\"https://www.amazon.com/Crucial-Conversations-Talking-Stakes-Second/dp/0071775307/\" target=\"_blank\" rel=\"nofollow noopener\"><i>Crucial Conversations: Tools for Talking When the Stakes Are High</i></a>.</p>\n<p>The first time I had to have one of these conversations was scary, and I agonized for days. But it turned out much better than the apocalyptic episode my imagination had conjured. It really had an impact on me, and it made future dialogues much easier.</p>\n<p>I still have a long way to go myself, and when I get there, maybe I’ll write about how to succeed. Until then, I’m going to continue to focus on simply not failing.</p>\n<p><i>The full version of this article was first published on</i> <a href=\"https://blog.usejournal.com/how-to-fail-as-a-new-engineering-manager-30b5fb617a\" target=\"_blank\" rel=\"nofollow noopener\"><i>Noteworthy</i></a><i>.</i></p>","categories":[{"id":"43226","name":"Community","slug":"community"},{"id":"43483","name":"Engineering","slug":"engineering"},{"id":"40153","name":"Tips","slug":"tips"}],"author":{"name":"Brad Armstrong","image":"https://cdn.techinasia.com/wp-content/authors/238679.jpg?v=1543537344"},"seo":{"title":"5 ways to quickly fail as a new engineering manager","description":"Coding is certainly no longer your main purpose in the company.","image":"https://cdn.techinasia.com/wp-content/uploads/2018/07/business-code-coding-943096.jpg"}}}