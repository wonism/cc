{"pageContext":{"id":"598767","parent":"__SOURCE__","slug":"learning-code-changed-startup-founder-mindset","internal":{"contentDigest":"14d30b2fe97ae058fa53823e57639ca4","type":"ContentCoPost","owner":"default-site-plugin"},"children":[],"title":"How learning to code changed the way I think as a startup founder","preview":{"source":"https://cdn.techinasia.com/wp-content/uploads/2017/10/kevin-364843.jpg","attachment_meta":{"width":2000,"height":1500,"sizes":{"thumbnail":{"width":100,"height":100,"url":"https://cdn.techinasia.com/wp-content/uploads/2017/10/kevin-364843-100x100.jpg"},"medium":{"width":350,"height":263,"url":"https://cdn.techinasia.com/wp-content/uploads/2017/10/kevin-364843-350x263.jpg"},"large":{"width":750,"height":563,"url":"https://cdn.techinasia.com/wp-content/uploads/2017/10/kevin-364843-750x563.jpg"}}}},"createdAt":"2018-11-15T07:12:41","content":"<p>Last year, I decided to start Seek Sophie, an online travel platform. As neither my co-founder nor I had a technical background, I decided  that I should learn coding so I could build the platform from scratch. At the time, I had no idea what the difference between a WordPress site and a website from scratch was.</p>\n<p>Friends told me I was being silly. I was a first-time startup founder already grappling with a whole load of unknowns, and yet I was choosing to take on another huge unknown. Why was I not staying within my area of competency (i.e. the business/corporate side of things)?</p>\n<p><img class=\"aligncenter size-large wp-image-598772\" src=\"https://cdn.techinasia.com/wp-content/uploads/2018/11/comic-3-750x233.jpg\" alt=\"comic-3\" width=\"750\" height=\"233\"></p>\n<p>During those early months of learning, it just seemed obvious that a founder of a tech business should understand the business’ foundation.</p>\n<p>I kept tossing around this question in my head: If I were starting a hotel business, I wouldn’t feel the need to learn civil engineering. But why did I feel the need to learn coding for my online business?</p>\n<p>Five months after I learned how to code, we launched seeksophie.com. In the process of building the site, I had my answers.</p>\n<h2><strong>1. It’s not about the code, it’s about a way of thinking</strong></h2>\n<p><img class=\"aligncenter wp-image-598768\" src=\"https://cdn.techinasia.com/wp-content/uploads/2018/11/comic-1.png\" alt=\"comic-1\" width=\"305\" height=\"300\"></p>\n<p>On the first day of my coding bootcamp, our instructor told us that they weren’t teaching us code, they were teaching us how to think. I liked the sound of that, but I was skeptical. Pretty quickly, I realized that the world of coding was different from anything I had ever known before.</p>\n<p>In my years of schooling and corporate law career, the focus was often on finding the right answer. Because there’s a right answer, there’s also a wrong answer. With that mindset also came perfectionism and shame associated with not getting the right answer.</p>\n<p>Coding was different. Because everyone’s codebase is so different, what works for one person’s code may be pretty different from what works for someone else’s. So, there is no one single right answer, but different right answers for different codebases.</p>\n<p>Then, there are the bugs, which are integral to the process. Debugging is a core skill for developers. When bugs are seen as a natural part of a process rather than anathema, this removes the fear of bugs—or failure. All the focus then gets channeled into doing the detective work for debugging instead of dealing with the shame of failure.</p>\n<p>As I iterate our site to achieve product-market fit, I don’t get attached to a perfect solution nor get bogged down by the shame of something not working out. I just see the whole process as detective work . If this new feature doesn’t increase the conversion rate, I’ll just find another way.</p>\n<h2><strong>2. How good a cake is depends on the quality of its ingredients</strong></h2>\n<p>When building a product, there are many micro-decisions that need to be made (how the information architecture is designed, which third-party APIs to use, how to manage app memory, etc.). These micro-decisions will ultimately impact whether the business’ vision is achieved in the short or medium term.</p>\n<p>A simple example was the decision on which backend payments provider I should incorporate on the site. I was deciding between Braintree and Stripe. If I hadn’t picked up coding, I wouldn’t have looked more closely at the developer documentation and learned the little differences between Braintree and Stripe.</p>\n<p>When I took a closer look, I chose Stripe as it better aligned with our long-term goals and was easier to maintain. It also allowed us to incorporate Alipay and WeChat Pay, the preferred payment methods for Chinese consumers who we eventually want to target.</p>\n<p>Also, if I had not looked into the developer documentation, I may have only asked surface-level questions. I may not have asked about cancellation charges, how long it takes for the money to reach a bank account, when I should be charging the customer, and how that timing impacts revenue.</p>\n<p>When I realized that any cancelled payments through Stripe carried a hefty fee, I changed my business model to take payments after the cancellation period instead.</p>\n<p>Of course, this is not a coding-specific skill set. If someone wanted to dig deep into the product documentation to understand the impact of a product decision, they could do that with or without learning to code. However, what are the chances a non-technical founder would do that?</p>\n<h2><strong>3. When our users say jump, we only ask how high</strong></h2>\n<p>After we launched Seek Sophie, we spoke to our users every week. We acted on every useful insight that we received and, in the process, overhauled our landing page four times and introduced new product features.</p>\n<p>That just shows the development work is nowhere close to being done when the site goes live. If you’re working off a Wix/Squarespace/Wordpress template, even the most powerful template is still a template, and this will limit your ability to make changes that may convert your users.</p>\n<p>If you’re working with a third-party developer who charges by the hour, you’re forced to choose between (1) not being able to test changes that may significantly impact your conversion rate or (2) paying by the hour for changes you’re not sure will impact the bottomline.</p>\n<p>One big thing I’ve learned about product iteration and A/B testing is that, fundamentally, it’s a game of inches. You simply don’t know what will make the biggest impact on conversion rates unless you test it.</p>\n<p>So, knowing how to iterate the product yourself means that you get to test features faster and more often, without worrying how those tests eat into your cash flow.</p>\n<h2><strong>4. Jumping off a cliff and waiting for “the one”</strong></h2>\n<p>Hiring is tough. And it’s even tougher when you need to assess people for culture fit.</p>\n<p>When you’re two people in the business, a new hire can change the culture of the company by 50 percent. When you don’t have people who can perform the key functions (such as coding), this puts a lot of pressure to find someone. And that pressure may lead to making sub-optimal choices.</p>\n<p>Knowing how to code takes some of the pressure off so that you can wait to hire someone who is really a good fit.</p>\n<h2><strong>5. If we speak the same language, maybe we’ll all get along</strong></h2>\n<p><img class=\"aligncenter size-full wp-image-598769\" src=\"https://cdn.techinasia.com/wp-content/uploads/2018/11/comic-2.png\" alt=\"comic-2\" width=\"600\" height=\"209\"></p>\n<p>In any company, tech or non-tech, there are multiple opportunities for miscommunication because people simply don’t understand someone else’s work.</p>\n<p>When I worked in corporate law, lawyers would bemoan that their clients didn’t understand the amount of work involved in any request. Clients, on the other hand, bemoaned that lawyer fees were too high. I’ve heard the same complaint from my non-technical founder friends dealing with developer teams.</p>\n<p>So, what happens when you have non-technical co-founders trying to manage a technical team in a tech company? Unless the level of trust is very high at the outset, miscommunication and resentment are inevitable.</p>\n<p>I hope that by learning the language of developers, I can somehow bridge that communication gap.</p>\n<h2><strong>6. If we survive to fight another day, we have a chance of making it</strong></h2>\n<p>This is the most obvious point, and one that has likely made the most tangible impact on our startup’s survival.</p>\n<p>Before I decided to learn to code, we canvassed quotes for the development of our site. The quotes ranged from S$30,000 to S$50,000 for the basic website, excluding any iteration following launch.</p>\n<p>The simple fact is that most startups fail because they run out of money. That S$50,000 of savings on web development has probably bought us another year of survival, and who knows what amazing things can happen in that year?</p>\n<p style=\"text-align: center;\">***</p>\n<p>Not knowing how to code my own tech product is like going into the battlefield with one arm tied behind me, relying on others to help me wage the battle. It’s certainly possible to win anyway, but that’s not how I would choose to enter the battlefield.</p>\n<p>Sun Tzu said it best: “Every battle is won before it’s ever fought.”</p>\n<p>Hopefully, learning to code gives us a better chance in this crazy, scary startup battlefield.</p>\n<p><em>This article was first published on <a href=\"https://blog.usejournal.com/6-good-reasons-why-tech-founders-should-learn-to-code-2d7e68a48d97\" target=\"_blank\" rel=\"nofollow noopener\">Noteworthy</a>.</em></p>","categories":[{"id":"43226","name":"Community","slug":"community"},{"id":"40153","name":"Tips","slug":"tips"},{"id":"48134","name":"Web Development","slug":"web-development"}],"author":{"name":"Jacinta Lim","image":"https://cdn.techinasia.com/wp-content/authors/232914.jpg?v=1542188535"},"seo":{"title":"How learning to code changed the way I think as a startup founder","description":"Not knowing how to code my own tech product is like going into the battlefield with one arm tied behind me.","image":"https://cdn.techinasia.com/wp-content/uploads/2017/10/kevin-364843.jpg"}}}