{"version":3,"sources":["webpack:///./src/templates/Post.jsx"],"names":["Img","styled","img","withConfig","displayName","componentId","Post","_ref","post","pageContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","seo","title","name","content","description","property","image","preview","source","src","alt","width","height","categories","map","_ref2","i","arr","id","key","length","createdAt","dangerouslySetInnerHTML","__html","propTypes","shape","string","isRequired","arrayOf","oneOfType","number"],"mappings":"qJAKMA,SAAMC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGJ,CAAH,iBAIHK,EAAO,SAAAC,GAAA,IAAgBC,EAAhBD,EAAGE,YAAH,OACXC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KACED,EAAAC,EAAAC,cAAA,aACGJ,EAAKO,IAAIC,OAEZN,EAAAC,EAAAC,cAAA,QAAMK,KAAK,cAAcC,QAASV,EAAKO,IAAII,cAC3CT,EAAAC,EAAAC,cAAA,QAAMQ,SAAS,iBAAiBF,QAASV,EAAKO,IAAII,cAClDT,EAAAC,EAAAC,cAAA,QAAMQ,SAAS,WAAWF,QAASV,EAAKO,IAAIM,QAC5CX,EAAAC,EAAAC,cAAA,QAAMK,KAAK,WAAWC,QAASV,EAAKO,IAAIC,SAEzCR,EAAKc,QAAQC,OACZb,EAAAC,EAAAC,cAACZ,EAAD,CAAKwB,IAAKhB,EAAKc,QAAQC,OAAQE,IAAKjB,EAAKQ,MAAOU,MAAM,OAAOC,OAAO,SAClE,KACJjB,EAAAC,EAAAC,cAAA,UACGJ,EAAKQ,OAERN,EAAAC,EAAAC,cAAA,6BACCJ,EAAKoB,WAAWC,IAAI,SAAAC,EAAeC,EAAGC,GAAlB,IAAGC,EAAHH,EAAGG,GAAIhB,EAAPa,EAAOb,KAAP,OACnBP,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,CAAgBqB,IAAKD,GACnBvB,EAAAC,EAAAC,cAAA,YAAOK,GACNc,IAAOC,EAAIG,OAAS,EAAK,KAAO,QAGrCzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,aACGJ,EAAK4B,WAER1B,EAAAC,EAAAC,cAAA,OAAKyB,wBAAyB,CAAEC,OAAQ9B,EAAKU,aAIjDZ,EAAKiC,UAAY,CACf9B,YAAa+B,gBAAM,CACjBxB,MAAOyB,SAAOC,WACdxB,QAASuB,SAAOC,WAChBd,WAAYe,kBACVH,gBAAM,CACJP,GAAIW,oBAAU,CAACC,SAAQJ,WAASC,WAChCzB,KAAMwB,SAAOC,cAEfA,WACFpB,QAASkB,gBAAM,CACbjB,OAAQkB,WACPC,WACHN,UAAWK,SAAOC,WAClB3B,IAAKyB,gBAAM,CACTxB,MAAOyB,SAAOC,WACdrB,MAAOoB,SAAOC,WACdvB,YAAasB,SAAOC,aACnBA,aACFA,YAGUpC","file":"component---src-templates-post-jsx-63b55bdae83310af780b.js","sourcesContent":["import React from 'react';\nimport { arrayOf, shape, oneOfType, string, number } from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\n\nconst Img = styled.img`\n  width: 100%;\n`;\n\nconst Post = ({ pageContext: post }) => (\n  <>\n    <Helmet>\n      <title>\n        {post.seo.title}\n      </title>\n      <meta name=\"description\" content={post.seo.description} />\n      <meta property=\"og:description\" content={post.seo.description} />\n      <meta property=\"og:image\" content={post.seo.image} />\n      <meta name=\"og:title\" content={post.seo.title} />\n    </Helmet>\n    {post.preview.source ? (\n      <Img src={post.preview.source} alt={post.title} width=\"auto\" height=\"auto\" />\n    ) : null}\n    <h1>\n      {post.title}\n    </h1>\n    <strong>Category : </strong>\n    {post.categories.map(({ id, name }, i, arr) => (\n      <React.Fragment key={id}>\n        <span>{name}</span>\n        {i === (arr.length - 1) ? null : ', '}\n      </React.Fragment>\n    ))}\n    <br />\n    <strong>Date : </strong>\n    <small>\n      {post.createdAt}\n    </small>\n    <div dangerouslySetInnerHTML={{ __html: post.content }} />\n  </>\n);\n\nPost.propTypes = {\n  pageContext: shape({\n    title: string.isRequired,\n    content: string.isRequired,\n    categories: arrayOf(\n      shape({\n        id: oneOfType([number, string]).isRequired,\n        name: string.isRequired,\n      })\n    ).isRequired,\n    preview: shape({\n      source: string,\n    }).isRequired,\n    createdAt: string.isRequired,\n    seo: shape({\n      title: string.isRequired,\n      image: string.isRequired,\n      description: string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n"],"sourceRoot":""}